<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>Tic-Tac-Toe</title>
    <style>
        /* CSS-Stile für das Tic-Tac-Toe-Spielfeld */
        body {
            font-family: Arial, sans-serif;
            background-color: #f0f0f0;
        }

        h1 {
            text-align: center;
        }

        .game-board {
            display: grid;
            grid-template-columns: repeat(3, 100px);
            grid-gap: 5px;
            width: 320px;
            margin: 0 auto;
        }

        .game-cell {
            width: 100px;
            height: 100px;
            background-color: #DDD;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 36px;
            cursor: pointer;
            position: relative;
        }

        .game-cell::before {
            content: '';
            position: absolute;
            border: 4px solid #000;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            box-sizing: border-box;
        }

        .winner {
            text-align: center;
            font-size: 24px;
            margin-top: 10px;
            color: #FF5733;
        }
    </style>
</head>
<body>
    <h1>Tic-Tac-Toe</h1>
    <div id="game-board" class="game-board"></div>
    <div class="winner" id="winner-message"></div>

    <script>
        const gameBoard = document.getElementById('game-board');
        const winnerMessage = document.getElementById('winner-message');
        let currentPlayer = 'X';

        // Spielfeld initialisieren
        function initializeBoard() {
            for (let i = 0; i < 9; i++) {
                const cell = document.createElement('div');
                cell.classList.add('game-cell');
                cell.addEventListener('click', () => makeMove(cell));
                gameBoard.appendChild(cell);
            }
        }

        // Spielerzug machen
        function makeMove(cell) {
            if (cell.textContent === '') {
                cell.textContent = currentPlayer;
                if (checkWinner()) {
                    endGame();
                } else {
                    currentPlayer = (currentPlayer === 'X') ? 'O' : 'X';
                }
            }
        }

        // Überprüfen, ob ein Spieler gewonnen hat
        function checkWinner() {
            const cells = document.querySelectorAll('.game-cell');
            const winningCombos = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];

            for (const combo of winningCombos) {
                const [a, b, c] = combo;
                if (cells[a].textContent === cells[b].textContent && cells[a].textContent === cells[c].textContent) {
                    if (cells[a].textContent === 'X' || cells[a].textContent === 'O') {
                        cells[a].style.color = 'red';
                        cells[b].style.color = 'red';
                        cells[c].style.color = 'red';
                        gameActive = false;
                        return true;
                    }
                }
            }
            return false;
        }

        // Das Spiel beenden und den Gewinner anzeigen
        function endGame() {
            winnerMessage.textContent = `${currentPlayer} hat gewonnen!`;
        }

        initializeBoard();
    </script>
</body>
</html>
